---
interface Props {
	title: string;
}

const { title } = Astro.props;
import ViewTransitions from 'astro/components/ViewTransitions.astro';

---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
		<script>
			// Obtener el elemento con ID "support"
			const msgSupport = document.getElementById('support');
	
			// Verificar si msgSupport no es nulo antes de acceder a su propiedad style
			if (msgSupport !== null) {
					// Verificar si la propiedad startViewTransition está definida en document
					if (typeof document.startViewTransition === 'undefined') {
							// Si no está definida, mostrar el mensaje de soporte
							msgSupport.style.display = "flex";
					} else {
							// Si está definida, ocultar el mensaje de soporte
							msgSupport.style.display = "none";
					}
			}
		</script>
	</head>
	<body>
		<div id="support" class="support"><span>Tu navegador no soporta la API View transition.</span></div>
		<slot />
	</body>
</html>

<style is:global>
	:root {
		color-scheme: light dark;
	}
	*{
		margin: 0; padding: 0;
		box-sizing: border-box;
		font-family: sans-serif;
		text-decoration: none;
		list-style: none;
	}
	body{
		max-width: 1280px;
		margin: auto;
		display: flex;
		justify-content: center;
		align-items: center;
		height: 100vh;
		gap: 20px;
		flex-wrap: wrap;
		padding: 30px 0px;
	}
	.support{
		position: fixed;
		display: flex;
		align-items: center;
		justify-content: center;
		z-index: 10;
		top: 0; left: 0;
		width: 100%; height: 30px;
		background: rgb(199, 48, 48);
		display: none;
	}
</style>
